#version 450 core
layout (location = 0) in vec3 position;
layout (location = 1) in vec3 normal;
layout (location = 2) in vec2 tex;

out vec3 fragpos;
out vec3 normal_out;
out vec2 TexCoord;

uniform mat4 mv_matrix;

uniform mat4 model;
uniform mat4 projection;
uniform mat4 view;

uniform vec3 Light;

out VS_OUT {
    vec3 N;
    vec3 L;
    vec3 V;
} vs_out;


void main(void)
{
//------------------------------------------
    vec4 p = mv_matrix * vec4(position,1.0);
    vs_out.N = mat3(mv_matrix) * normal;

    vs_out.L = Light - p.xyz;

    vs_out.V = -p.xyz;

    fragpos = vec3(model * vec4(position,1.0));
    gl_Position = projection * view * vec4(fragpos,1.0);
    //gl_Position =    projection * p;
    TexCoord = tex;

//------------------------------------------

/*
    fragpos = vec3(model * vec4(position,1.0));
    normal_out  =  normal;



    gl_Position = projection * view * vec4(fragpos,1.0);

    TexCoord = tex;
*/

/*
    vs_out.fragpos = vec3( model * vec4(position,1.0));
    vs_out.normal = normal;
    vs_out.color = changecolor;
    vs_out.TexCoord = vec2(tex.x, tex.y);
*/
}
